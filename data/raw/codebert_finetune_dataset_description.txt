 Dataset Summary: CodeBERT Fine-tuning â€“ Buffer Overflow Vulnerabilities
Total Samples: 1000
Format: JSON
Use Case: Supervised fine-tuning of CodeBERT to identify and understand C/C++ buffer overflow vulnerabilities in automotive software.

ðŸ“¦ Dataset Fields
Each entry contains the following structured fields:

category: Type of vulnerability (e.g., Buffer Overflow, Heap-based Buffer Overflow, Out-of-bounds Write, etc.)

cwe_id: Mapped CWE identifier (e.g., CWE-119, CWE-122, CWE-124, CWE-787, CWE-788)

cwe_description: Official CWE description to guide model understanding

vulnerable_code: A code snippet written in C/C++ that contains a realistic vulnerability within an automotive context

fixed_code: A corresponding secure version of the code that addresses the vulnerability using best practices (e.g., bounds checking, safer memory copy functions)

severity: Integer from 1 to 10 indicating how critical the vulnerability is in practice

complexity: Integer from 1 to 10 showing how difficult it is to detect and fix the vulnerability

context: The automotive subsystem or software module where this code would typically run (e.g., ECU Flash Update Handler, CAN Message Parser, SecureBoot Validation Routine)

ðŸ”§ CWE Coverage
This dataset covers the following Common Weakness Enumerations relevant to memory and buffer management in embedded systems:

CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer

CWE-122: Heap-based Buffer Overflow

CWE-124: Buffer Underwrite

CWE-787: Out-of-bounds Write

CWE-788: Out-of-bounds Read

ðŸš— Domain Alignment
All examples simulate automotive embedded environments such as:

Powertrain memory manipulation

ADAS sensor input handling

Infotainment parsing routines

SecureBoot and diagnostics buffer usage

CAN/LIN message processing

ðŸ§  Purpose
The dataset is designed to help CodeBERT:

Learn vulnerability patterns specific to embedded C/C++

Distinguish between secure and insecure memory operations

Generalize across automotive safety-critical code flows

